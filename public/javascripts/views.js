// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  jQuery(function() {
    var AppView, FeedBackListItemView, FeedbackInputView, FeedbackListView, FeedbackNavView, FeedbackSummaryView, _ref;
    FeedbackInputView = (function(_super) {

      __extends(FeedbackInputView, _super);

      function FeedbackInputView() {
        return FeedbackInputView.__super__.constructor.apply(this, arguments);
      }

      FeedbackInputView.prototype.el = "#newFeedback";

      FeedbackInputView.prototype.template = _.template($('#feedbacks-input-tmpl').html());

      FeedbackInputView.prototype.events = {
        "click #sendFeedback": "sendFeedback"
      };

      FeedbackInputView.prototype.initialize = function() {
        return console.log('FeedbackInputView.initialize');
      };

      FeedbackInputView.prototype.render = function() {
        console.log('FeedbackInputView.render');
        $(this.el).empty();
        $(this.el).html(this.template());
        return this;
      };

      FeedbackInputView.prototype.sendFeedback = function(e) {
        console.log("FeedbackInputView.sendFeedback::");
        e.preventDefault();
        return this.collection.create({
          create_at: new Date,
          comments: $("#comments").val(),
          completed: true
        });
      };

      return FeedbackInputView;

    })(Backbone.View);
    FeedbackSummaryView = (function(_super) {

      __extends(FeedbackSummaryView, _super);

      function FeedbackSummaryView() {
        return FeedbackSummaryView.__super__.constructor.apply(this, arguments);
      }

      FeedbackSummaryView.prototype.el = "#summary";

      FeedbackSummaryView.prototype.template = _.template($('#feedbacks-summary-tmpl').html());

      FeedbackSummaryView.prototype.initialize = function() {
        return console.log('FeedbackSummaryView.initialize');
      };

      FeedbackSummaryView.prototype.render = function() {
        console.log('FeedbackSummaryView.render');
        $(this.el).empty();
        $(this.el).html(this.template());
        return this;
      };

      return FeedbackSummaryView;

    })(Backbone.View);
    FeedbackListView = (function(_super) {

      __extends(FeedbackListView, _super);

      function FeedbackListView() {
        return FeedbackListView.__super__.constructor.apply(this, arguments);
      }

      FeedbackListView.prototype.el = "#lists";

      FeedbackListView.prototype.template = _.template($('#feedbacks-list-tmpl').html());

      FeedbackListView.prototype.events = {
        'click #sort-btn': 'sortby'
      };

      FeedbackListView.prototype.sortby = function(e) {
        console.log('Sort Button clicked...........');
        return e.preventDefault();
      };

      FeedbackListView.prototype.prevSliderClick = function(e) {
        console.log('FeedbackListView.prevSliderClick', window.mySwipe);
        e.preventDefault();
        window.mySwipe.prev();
        return false;
      };

      FeedbackListView.prototype.nextSliderClick = function(e) {
        console.log('FeedbackListView.nextSliderClick', window.mySwipe);
        e.preventDefault();
        window.mySwipe.next();
        return false;
      };

      FeedbackListView.prototype.initialize = function() {
        console.log('FeedbackListView.initialize');
        this.collection.on('reset', this.render, this);
        return this.collection.on('remove', this.render, this);
      };

      FeedbackListView.prototype.render = function() {
        var collection;
        console.log('FeedbackListView.render');
        collection = this.collection;
        console.log("collection.length", collection.length);
        $(this.el).empty();
        $(this.el).html(this.template());
        if (collection.length) {
          collection.each(function(feedback) {
            var view;
            view = new FeedBackListItemView({
              collection: collection,
              model: feedback
            });
            return $("#feedback_list_ul").append(view.render().el);
          });
        }
        return this;
      };

      return FeedbackListView;

    })(Backbone.View);
    FeedBackListItemView = (function(_super) {

      __extends(FeedBackListItemView, _super);

      function FeedBackListItemView() {
        return FeedBackListItemView.__super__.constructor.apply(this, arguments);
      }

      FeedBackListItemView.prototype.tagName = "li";

      FeedBackListItemView.prototype.className = "well span4 item";

      FeedBackListItemView.prototype.template = _.template($("#feedback-list-item-tmpl").html());

      FeedBackListItemView.prototype.events = {
        'swipe': 'swipeEvent',
        'click .icon-remove': 'removeList',
        'click #change-status': 'changeStatus'
      };

      FeedBackListItemView.prototype.swipeEvent = function() {
        return console.log('swipeEvent on the li. Horraaaaaaaaaaaaaaaaaaay!');
      };

      FeedBackListItemView.prototype.initialize = function() {};

      FeedBackListItemView.prototype.render = function() {
        var renderedContent;
        renderedContent = this.template(this.model.toJSON());
        this.$el.html(renderedContent);
        return this;
      };

      FeedBackListItemView.prototype.removeList = function(e) {
        e.preventDefault();
        return this.model.clear();
      };

      FeedBackListItemView.prototype.changeStatus = function(e) {
        e.preventDefault();
        return console.log('FeedBackListItemView.changeStatus...');
      };

      return FeedBackListItemView;

    })(Backbone.View);
    FeedbackNavView = (function(_super) {

      __extends(FeedbackNavView, _super);

      function FeedbackNavView() {
        return FeedbackNavView.__super__.constructor.apply(this, arguments);
      }

      FeedbackNavView.prototype.initialize = function() {
        return console.log('FeedbackNavView.initialize');
      };

      FeedbackNavView.prototype.render = function() {
        console.log('FeedbackNavView.render');
        $(this.el).html(this.template());
        return this;
      };

      return FeedbackNavView;

    })(Backbone.View);
    AppView = (function(_super) {

      __extends(AppView, _super);

      function AppView() {
        return AppView.__super__.constructor.apply(this, arguments);
      }

      AppView.prototype.el = "#center_content";

      AppView.prototype.initialize = function() {
        console.log('AppView initialize');
        this.collection.bind('reset', this.render, this);
        this.panes = [
          new FeedbackSummaryView({
            collection: this.collection
          }), new FeedbackListView({
            collection: this.collection
          }), new FeedbackInputView({
            collection: this.collection
          })
        ];
        return this.subviews = [
          new FeedbackNavView({
            collection: this.collection
          })
        ];
      };

      AppView.prototype.render = function() {
        console.log('AppView.render');
        return this;
      };

      AppView.prototype.setActivePane = function(paneId) {
        console.log('setActivePane', paneId);
        return this.panes[paneId].render().el;
      };

      return AppView;

    })(Backbone.View);
    this.app = (_ref = window.app) != null ? _ref : {};
    return this.app.AppView = AppView;
  });

}).call(this);
